all of this come from Datacamp
https://app.datacamp.com/learn/assignments

1. Python Data Types
there's the float, to represent a real number
and the int, to represent an integer. Next,
we also have str, short for string, to represent text in Python
and bool, which can be either True or False. You can save these values as a variable, like these examples show.

2. Problem
the infomation you met in life, such as height, phone-number, click..

3. Python List
3-1 lists can also contain lists themselves.
3-2 A list is a way to give a single name to a collection of values. 
These values, or elements, can have any type; they can be floats, integer, booleans, strings, 
but also more advanced Python types, even lists. It's perfectly possible for a list to contain different types as well.

4. List type
列表里可以包含字符串和数字，先想一想格式，就连逗号都很重要

5. Subsetting lists
5-1 The first element in the list has index 0, the second element has index 1, and so on.
5-2 You can also count backwards, using negative indexes. This is useful if you want to get some elements at the end of your list. 
5-3 To get your dad's height, for example, you'll need the index -1. These are the negative indexes for all list elements.

6. List slicing
从0开始index，连字符串都算，一个一个的
多多print，这样才能确保每一步都是正确取值

7. Changing list elements
可以用新元素直接覆盖

8. delete elements
注意取值范围，括号左闭右开

9. functions
a function is a piece of reusable code, aimed at solving a particular task. 
You can call functions instead of having to write code yourself. Maybe an example can clarify things here.
take round() function for example,四舍五入，round(number, ndigits)
一定要细心细心再细心，即便是括号，定义的名字，也是要严格遵守规范，和语法规则的

10. upper method is not defined python

11. # How much is your $100 worth after 7 years?
print(100*1.1**7)

12.类名.方法名，一些最基础的编程知识其实是通用的。（今天把有疑问的练习题汇总给TA

13. install pakages
http://pip.readthedocs.org/en/stable/installing/
terminal: python3 get-pip.py

14. import pakages:
import numpy as np
np.array([1,2,3])

import numpy
numpy.array([1,2,4])

from numpy import array
array([1,2,5])

15. 
# Import numpy
import numpy as np

# Calculate the BMI: bmi
np_height_m = np.array(height_in) * 0.0254
np_weight_kg = np.array(weight_lb) * 0.453592
bmi = np_weight_kg / np_height_m ** 2


# Create the light array
light = bmi < 21
print(bmi)
# Print out light
print(light)


# Print out BMIs of all baseball players whose BMI is below 21
print(bmi[light])

16.
In [1]:
np.array([True, 1, 2]) + np.array([3, 4, False])
Out[1]:
array([4, 5, 2])
In [2]:
np.array([4, 3, 0]) + np.array([0, 2, 2])
Out[2]:
array([4, 5, 2])

True was converted to 1
False was converted to 0

17. 
# baseball is available as a regular list of lists

# Import numpy package
import numpy as np

# Create np_baseball (2 cols)
np_baseball = np.array(baseball)

# Print out the 50th row of np_baseball
print(np_baseball[49,:])

# Select the entire second column of np_baseball: np_weight_lb
np_weight_lb =np_baseball[:,1]


# Print out height of 124th player
print(np_baseball[123, 0])

18. 注意list[] 和 () 的区别,同时注意 类名.方法名 的具体应用，还有 取值范围名[]  的应用
# heights and positions are available as lists

# Import numpy
import numpy as np

# Convert positions and heights to numpy arrays: np_positions, np_heights
np_positions = np.array(positions)
np_heights = np.array(heights)


# Heights of the goalkeepers: gk_heights
gk_heights = np_heights[np_positions == 'GK']

# Heights of the other players: other_heights
other_heights = np_heights[np_positions != 'GK']

# Print out the median height of goalkeepers. Replace 'None'
med_height_goalkeepers = np.median(gk_heights)
print("Median height of goalkeepers: " + str(med_height_goalkeepers))

# Print out the median height of other players. Replace 'None'
med_height_other_players = np.median(other_heights)
print("Median height of other players: " + str(med_height_other_players))


